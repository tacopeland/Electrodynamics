buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
sourceSets {
    main {
        java {
            srcDirs = [
                "$projectDir/src/core",
                "$projectDir/src/api",
                "$projectDir/src/externalapi",
                "$projectDir/src/forcefields",
                "$projectDir/src/nuclear",
            ]
            include '**/*.java'
        }

        resources {
            srcDirs = [
                 "$projectDir/src/resources"
            ]
        }
    }
}
// define the properties file
ext.configFile = file "build.properties"
configFile.withReader {
	// read config.
	def prop = new Properties()
	prop.load(it)
	ext.config = new ConfigSlurper().parse prop
}

libsDirName = "../output"
distsDirName = "../output"

version = "${config.minecraft_version}-${config.version_major}.${config.version_minor}.${config.version_revision}-${config.version_build}"
group= "electrodynamics"
archivesBaseName = "ElectrodynamicsAll"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.12.2-14.23.5.2838"
    runDir = "eclipse"
    mappings = "stable_39"

	replace "@VERSION@", project.version
    replaceIn "References.java"
}


dependencies {
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task coreJar(type: Jar) {
    baseName = 'PhysicaCore'

    from zipTree(jar.outputs.getFiles().getSingleFile()).matching {
        exclude 'electrodynamics/nuclear/**', 'electrodynamics/forcefield/**'
    }
}

task nuclearJar(type: Jar) {
    baseName = 'PhysicaNuclearPhysics'

    from zipTree(jar.outputs.getFiles().getSingleFile()).matching {
        include 'electrodynamics/nuclear/**'
    }
}

task forcefieldJar(type: Jar) {
    baseName = 'PhysicaForcefield'

    from zipTree(jar.outputs.getFiles().getSingleFile()).matching {
        include 'electrodynamics/forcefield/**'
    }
}

task incrementBuildNumber() {
    doLast {
        config.version_build = (config.version_build.toString().toInteger()) + 1
        configFile.withWriter {
            config.toProperties().store(it, "")
        }
     }
}
coreJar.dependsOn('reobf')
nuclearJar.dependsOn('reobf')
forcefieldJar.dependsOn('reobf')
incrementBuildNumber.dependsOn('reobf')
task releaseJars(type: Copy) {
	dependsOn "reobf"
	from incrementBuildNumber
	from coreJar
	from nuclearJar
	from forcefieldJar
	destinationDir= new File('/releaseJarsOnly/')
}